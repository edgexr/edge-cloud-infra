- name: Add Certbot PPA
  apt_repository:
    repo: ppa:certbot/certbot
  become: yes

- name: Install Certbot
  apt:
    name: python3-certbot-dns-cloudflare
    state: latest
  become: yes

- name: Load cloudflare creds
  import_role:
    name: load-vault-creds
    tasks_from: cloudflare
  when: cloudflare_account_email is undefined or cloudflare_account_api_token is undefined

- name: Set up Cloudflare config
  template:
    src: cloudflare.ini.j2
    dest: "{{ cloudflare_credentials_file }}"
    owner: root
    group: root
    mode: 0400
  become: yes

- name: Compute cert file name
  set_fact:
    cert_filename: "{{ cert_name | default(cert_domains[0]) }}"

- name: Compute cert file path
  set_fact:
    cert_file: "{{ letsencrypt_root }}/{{ cert_filename }}/fullchain.pem"

- name: "Check if cert exists"
  stat:
    path: "{{ cert_file }}"
  become: yes
  register: cert_file_stat

- block:
  - debug:
      msg: "Generating cert for domains(s): {{ cert_domains | join(', ') }}"

  - name: Fix broken pyOpenSSL
    pip:
      name: pyOpenSSL
      state: latest

  - name: Obtain certs from Letsencrypt
    command: >-
      certbot certonly
        --dns-cloudflare --dns-cloudflare-credentials {{ cloudflare_credentials_file }}
        --agree-tos --email {{ mex_ops_email }} --non-interactive
        -d {{ cert_domains | join(" -d ") }} --cert-name "{{ cert_filename }}"
    become: yes
    args:
      creates: "{{ cert_file }}"
    notify:
      - Restart nginx

  when: not cert_file_stat.stat.exists

- name: Install nginx post-renewal hook
  copy:
    src: nginx_reload_hook
    dest: "{{ letsencrypt_renewal_hooks_dir }}/post/nginx_reload_hook"
    owner: root
    group: root
    mode: 0755
  become: yes

- name: Install pre-renewal hooks
  copy:
    dest: "{{ letsencrypt_renewal_hooks_dir }}/pre/{{ item.hook_name }}"
    content: "{{ item.hook_content }}"
    owner: root
    group: root
    mode: 0755
  become: yes
  with_items: "{{ pre_renewal_hooks }}"
  when: pre_renewal_hooks is defined

- name: Install post-renewal hooks
  copy:
    dest: "{{ letsencrypt_renewal_hooks_dir }}/post/{{ item.hook_name }}"
    content: "{{ item.hook_content }}"
    owner: root
    group: root
    mode: 0755
  become: yes
  with_items: "{{ post_renewal_hooks }}"
  when: post_renewal_hooks is defined
