---
- import_role:
    name: web
    tasks_from: certs
  vars:
    cert_domains: [ "{{ inventory_hostname }}" ]
    pre_renewal_hooks:
      - hook_name: harbor_reload_hook
        hook_content: |
          #!/bin/bash
          docker stop nginx
    post_renewal_hooks:
      - hook_name: harbor_reload_hook
        hook_content: |
          #!/bin/bash
          cp -f /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem /data/secret/cert/server.crt
          cp -f /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem /data/secret/cert/server.key
          docker start nginx
  tags: setup

- name: Configure the docker daemon
  copy:
    src: docker-daemon.json
    dest: /etc/docker/daemon.json
  become: yes
  notify: Restart docker daemon

- name: Install service script
  template:
    src: harbor-svc.sh.j2
    dest: "{{ harbor_service_script }}"
    owner: root
    group: root
    mode: "0544"
  become: yes

- name: Install systemd service
  template:
    src: harbor.service.j2
    dest: /etc/systemd/system/harbor.service
  become: yes

- name: Check if harbor is already installed
  stat:
    path: "{{ harbor_install_dir }}/harbor.yml"
  register: harbor_config_file

- block:

  - pause:

  - name: "Download harbor installer v{{ harbor_release }}"
    get_url:
      url: "https://github.com/goharbor/harbor/releases/download/v{{ harbor_release }}/harbor-offline-installer-v{{ harbor_release }}.tgz"
      dest: "{{ ansible_env.HOME }}/harbor-offline-installer-v{{ harbor_release }}.tgz"
      checksum: "{{ harbor_installer_checksum }}"
    register: harbor_download
    tags: setup

  - name: Create the installer directory
    file:
      path: "{{ harbor_install_dir | dirname }}"
      state: directory
    tags: setup

  - name: Extract harbor
    unarchive:
      src: "{{ harbor_download.dest }}"
      dest: "{{ harbor_install_dir | dirname }}"
      remote_src: yes
    tags: setup

  - name: Set up GCP service account credentials
    copy:
      dest: "{{ gcp_service_account_path }}"
      content: "{{ gcp_service_account_credentials }}"
      owner: "10000"
      group: root
      mode: "0400"
    become: yes

  - name: Set up config file
    template:
      src: harbor.yml.j2
      dest: "{{ harbor_install_dir }}/harbor.yml"
    notify: Initial password notice

  - name: Run the installer
    command:
      cmd: ./install.sh --with-trivy --with-chardmuuseum
      chdir: "{{ harbor_install_dir }}"
      creates: /data/registry
    become: yes

  - name: Wait for service to start
    systemd:
      name: harbor
      enabled: yes
      state: started
    become: yes

  - wait_for:
      timeout: 10
    delegate_to: localhost

  - name: Set admin password
    uri:
      url: "https://{{ inventory_hostname }}/api/v2.0/users/1/password"
      user: admin
      password: "{{ harbor_initial_password }}"
      method: PUT
      body:
        old_password: "{{ harbor_initial_password }}"
        new_password: "{{ harbor_admin_password }}"
      body_format: json

  - import_role:
      name: harbor
      tasks_from: configure

  when: not harbor_config_file.stat.exists

- name: Enable harbor service
  systemd:
    name: harbor
    enabled: yes
    state: started
  become: yes
