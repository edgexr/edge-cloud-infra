server {
	listen 80 default_server;
	listen [::]:80 default_server;

	server_name {{ inventory_hostname }};

	error_page 400 /400.html;
	location /400.html{
		return 400 '{"message": "Protocol error; $host needs HTTPS"}';
	}

	location /api/ { return 400; }
	location / { return 301 https://$host$request_uri; }
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name {{ console_vnc_hostname }};

	ssl_certificate {{ letsencrypt_root }}/{{ console_vm_hostname }}/fullchain.pem;
	ssl_certificate_key {{ letsencrypt_root }}/{{ console_vm_hostname }}/privkey.pem;
	ssl_session_cache shared:le_nginx_SSL:1m;
	ssl_session_cache shared:le_nginx_SSL:1m;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

	location / {
		proxy_pass https://127.0.0.1:{{ mc_vnc_port }};
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_buffering off;
		proxy_read_timeout 30m;
	}
}
