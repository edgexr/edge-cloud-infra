---
- name: Load cloudflare creds
  import_role:
    name: load-vault-creds
    tasks_from: cloudflare
  tags: certgen
  when: cloudflare_account_email is not defined or cloudflare_account_api_token is not defined

- name: Create groups
  group:
    name: "{{ vault_group }}"
  become: yes
  tags: setup

- name: Create vault user account
  user:
    name: "{{ vault_user }}"
    group: "{{ vault_group }}"
    system: yes
    shell: /sbin/nologin
    createhome: no
  become: yes
  tags: setup

- name: Install vault dependencies
  apt:
    name:
      - unzip
  become: yes
  tags: setup

- name: "Download vault {{ vault_version }}"
  get_url:
    url: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip"
    dest: "{{ ansible_env.HOME }}/vault_{{ vault_version }}_linux_amd64.zip"
    checksum: "{{ vault_checksum }}"
  register: vault_download
  tags: setup

- name: Extract vault
  unarchive:
    src: "{{ vault_download.dest }}"
    dest: "{{ vault_path }}"
    remote_src: yes
  become: yes
  tags: setup

- name: Grant IPC lock capability
  capabilities:
    path: "{{ vault_path }}/vault"
    capability: cap_ipc_lock+ep
  become: yes
  tags: setup

- name: Grant privileged port access
  capabilities:
    path: "{{ vault_path }}/vault"
    capability: cap_net_bind_service+ep
  become: yes
  tags: setup
  when: vault_ha_instance_port < 1024

- name: Install vault config file
  template:
    src: vault.hcl.j2
    dest: "{{ vault_conf }}"
    backup: yes
  become: yes
  notify: Reload vault

- import_role:
    name: vault
    tasks_from: setup-audit

- import_role:
    name: vault
    tasks_from: setup-cert-plugin

- name: Set default cert ACLs
  acl:
    path: "{{ item }}"
    entity: "{{ vault_user }}"
    etype: user
    permissions: r
    default: yes
    state: present
  become: yes
  with_items:
    - "/etc/letsencrypt/live/{{ inventory_hostname }}"
    - "/etc/letsencrypt/archive/{{ inventory_hostname }}"
  tags: setup

- name: Allow vault permission to its certs
  acl:
    path: "{{ item }}"
    entity: "{{ vault_user }}"
    etype: user
    permissions: r
    recursive: yes
    state: present
  become: yes
  with_items:
    - "/etc/letsencrypt/live/{{ inventory_hostname }}"
    - "/etc/letsencrypt/archive/{{ inventory_hostname }}"
  tags: setup

- name: Allow vault permission to its cert directories
  acl:
    path: "{{ item }}"
    entity: "{{ vault_user }}"
    etype: user
    permissions: rx
    state: present
  become: yes
  with_items:
    - /etc/letsencrypt/live
    - "/etc/letsencrypt/live/{{ inventory_hostname }}"
    - /etc/letsencrypt/archive
    - "/etc/letsencrypt/archive/{{ inventory_hostname }}"
  tags: setup

- name: Install systemd service file
  template:
    src: vault.service.j2
    dest: "/etc/systemd/system/vault.service"
    mode: 0644
  become: yes

- pause:
    prompt: "Shut down the vault instance now. Continue when done."

- name: Start vault service
  systemd:
    name: vault
    enabled: yes
    state: started
    daemon_reload: yes
  become: yes

- name: Check if vault is initialized
  uri:
    url: "https://{{ inventory_hostname }}:{{ vault_ha_instance_port }}/v1/sys/init"
    return_content: yes
    status_code: 200
    body_format: json
  register: result

- debug:
    msg: "Vault needs to be initialized"
  when:
    - not ansible_check_mode
    - not result.json.initialized
  changed_when: true
  notify: Vault initialization prompt

- include_role:
    role: vault
    tasks_from: loadbalancer
  tags:
    - loadbalancer
